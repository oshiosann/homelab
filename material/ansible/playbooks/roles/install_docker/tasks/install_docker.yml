---
- name: Uninstall docker and related packages if already installed
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: absent
  with_items:
    - docker
    - docker-client
    - docker-client-latest
    - docker-common
    - docker-latest
    - docker-latest-logrotate
    - docker-logrotate
    - docker-engine
  become: true

- name: Install docker
  block:
    - name: Find rpm packages
      ansible.builtin.find:
        paths:
          - "{{ ansible_home_directory }}/materials/rpm/docker"
          - "{{ ansible_home_directory }}/materials/rpm/containerd"
        patterns: "*.rpm"
      register: docker_rpm_files
      delegate_to: localhost

    - name: Define package paths from find results
      ansible.builtin.set_fact:
        docker_rpm_package_paths: "{{ docker_rpm_files.files | map(attribute='path') | list }}"

    - name: Define package paths for target host
      ansible.builtin.set_fact:
        docker_rpm_package_dest_paths: "{{ docker_rpm_files.files | map(attribute='path') | map('dirname') | list }}"

    - name: Copy packages to target host
      ansible.builtin.copy:
        src: "{{ item.0 }}"
        dest: "{{ item.1 }}/"
        owner: ansible
        group: ansible
      with_together:
        - "{{ docker_rpm_package_paths }}"
        - "{{ docker_rpm_package_dest_paths }}"

    - name: Install packages for docker and containerd
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
        disable_gpg_check: true
      with_items: "{{ docker_rpm_package_paths }}"
      become: true

    - name: Enable docker
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true
      become: true

    - name: Get installed docker info
      ansible.builtin.command: "docker info"
      changed_when: false
      register: check_installed_docker
      become: true

    - name: Display output of df command
      ansible.builtin.debug:
        msg: "{{ check_installed_docker }}"
      when: check_installed_docker is succeeded
  rescue:
    - name: Uninstall docker packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: absent
      with_items: "{{ docker_packages }}"
      become: true
