---
- name: Create Kubernetes cluster
  block:
    - name: Create Kubernetes cluster
#      ansible.builtin.command: "kubeadm init --kubernetes-version={{ kubernetes_version }} --pod-network-cidr={{ pod_network.network }}/{{ pod_network.cidr }} --control-plane-endpoint={{ kube_vip.vip_addr }}:{{ kube_vip.port }} --apiserver-advertise-address={{ host_parameters.master001v.ip_addr }} --upload-certs"
      ansible.builtin.command: "kubeadm init --kubernetes-version={{ kubernetes_version }} --pod-network-cidr={{ pod_network.network }}/{{ pod_network.cidr }} --control-plane-endpoint={{ kube_vip.vip_addr }}:{{ kube_vip.port }} --upload-certs"
      register: create_k8s_cluster
      until: create_k8s_cluster.rc == 0
      become: true

    - name: Create $HOME/.kube directory
      ansible.builtin.file:
        path: "{{ ansible_home_directory }}/.kube"
        owner: ansible
        group: ansible
        mode: "0755"
        state: directory

    - name: Copy /etc/kubernetes/admin.conf to $HOME/.kube/config
      ansible.builtin.copy:
        src: "/etc/kubernetes/admin.conf"
        dest: "{{ ansible_home_directory }}/.kube/config"
        owner: ansible
        group: ansible
        mode: "0600"
        remote_src: true
      become: true

    - name: Run "kubectl get nodes" to check if the cluster is active
      ansible.builtin.command: "kubectl get nodes"
      changed_when: false
      become: true
      register: check_master_on_k8s

    - name: Display k8s node list
      ansible.builtin.debug:
        msg: "{{ check_master_on_k8s.stdout }}"
  rescue:
    - name: Delete $HOME/.kube/config
      ansible.builtin.file:
        path: "{{ ansible_home_directory }}/.kube/config"
        state: absent
