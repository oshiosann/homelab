---
- name: Install containerd
  block:
    - name: Find rpm packages
      ansible.builtin.find:
        paths:
          - "{{ ansible_home_directory }}/materials/rpm/containerd"
        patterns: "*.rpm"
      register: containerd_rpm_files
      delegate_to: localhost

    - name: Define package paths from find results
      ansible.builtin.set_fact:
        containerd_rpm_package_paths: "{{ containerd_rpm_files.files | map(attribute='path') | list }}"

    - name: Define package paths for target host
      ansible.builtin.set_fact:
        containerd_rpm_package_dest_paths: "{{ containerd_rpm_files.files | map(attribute='path') | map('dirname') | list }}"

    - name: Copy packages to target host
      ansible.builtin.copy:
        src: "{{ item.0 }}"
        dest: "{{ item.1 }}/"
        owner: ansible
        group: ansible
      with_together:
        - "{{ containerd_rpm_package_paths }}"
        - "{{ containerd_rpm_package_dest_paths }}"

    - name: Install packages for containerd
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
        disable_gpg_check: true
      with_items: "{{ containerd_rpm_package_paths }}"
      become: true

    - name: Create /etc/containerd directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        owner: root
        group: root
        mode: "0755"
      become: true

    - name: Update /etc/containerd/config.toml
      ansible.builtin.template:
        src: config.toml.j2
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: "0644"
      become: true

    - name: Enable containerd
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: true
      become: true

    - name: Find binary files
      ansible.builtin.find:
        paths:
          - "{{ ansible_home_directory }}/materials/binary/cni-plugins"
        patterns: "*.tgz"
      register: cni_binary_files
      delegate_to: localhost

    - name: Define binary path from find results
      ansible.builtin.set_fact:
        cni_binary_paths: "{{ cni_binary_files.files | map(attribute='path') | list }}"

    - name: Define package paths for target host
      ansible.builtin.set_fact:
        cni_binary_dest_paths: "{{ cni_binary_files.files | map(attribute='path') | map('dirname') | list }}"

    - name: Copy packages to target host
      ansible.builtin.copy:
        src: "{{ item.0 }}"
        dest: "{{ item.1 }}/"
        owner: ansible
        group: ansible
      with_together:
        - "{{ cni_binary_paths }}"
        - "{{ cni_binary_dest_paths }}"

    - name: Create /opt/cni/bin directory
      ansible.builtin.file:
        path: /opt/cni/bin
        state: directory
        owner: root
        group: root
        mode: "0755"
      become: true

    - name: Extract material
      ansible.builtin.unarchive:
        src: "{{ item }}"
        dest: /usr/local/bin
      with_items: "{{ cni_binary_paths }}"
      become: true

  rescue:
    - name: Uninstall containerd
      ansible.builtin.dnf:
        name: "containerd.io"
        state: absent
      become: true

    - name: Delete /etc/containerd/config.toml
      ansible.builtin.file:
        path: /etc/containerd/config.toml
        state: absent
      become: true

    - name: Delete cni materials
      ansible.builtin.file:
        path: /usr/local/bin
        state: absent
      become: true
