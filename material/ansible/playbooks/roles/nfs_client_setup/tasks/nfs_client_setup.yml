---
- name: Setup nfs client
  block:
    - name: Find rpm packages
      ansible.builtin.find:
        paths:
          - "{{ ansible_home_directory }}/materials/rpm/nfs-client"
        patterns: "*.rpm"
      register: nfs_client_rpm_files
      delegate_to: localhost

    - name: Define package paths from find results
      ansible.builtin.set_fact:
        nfs_client_rpm_package_paths: "{{ nfs_client_rpm_files.files | map(attribute='path') | list }}"

    - name: Define package paths for target host
      ansible.builtin.set_fact:
        nfs_client_rpm_package_dest_paths: "{{ nfs_client_rpm_files.files | map(attribute='path') | map('dirname') | list }}"
      when: "'ansible' not in group_names"

    - name: Copy packages to target host
      ansible.builtin.copy:
        src: "{{ item.0 }}"
        dest: "{{ item.1 }}/"
        owner: ansible
        group: ansible
      with_together:
        - "{{ nfs_client_rpm_package_paths }}"
        - "{{ nfs_client_rpm_package_dest_paths }}"
      when: "'ansible' not in group_names"

    - name: Install packages for nfs-utils
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
        disable_gpg_check: true
      with_items: "{{ nfs_client_rpm_package_paths }}"
      become: true

    - name: Slurp /etc/fstab
      ansible.builtin.slurp:
        path: /etc/fstab
      register: slurp_fstab

    - name: Echo content of /etc/fstab
      ansible.builtin.debug:
        msg: "{{ slurp_fstab.content | b64decode }}"

    - name: Backup /etc/fstab
      ansible.builtin.copy:
        src: /etc/fstab
        dest: /etc/fstab_org
        owner: root
        group: root
        mode: "0644"
        remote_src: true
        force: false
      become: true

    - name: Mount NFS share directory
      ansible.posix.mount:
        src: "{{ internal_nfs_server }}:/mnt/share"
        path: /mnt
        opts: vers=3,defaults
        state: mounted
        fstype: nfs
      become: true

    - name: Slurp /etc/fstab (after)
      ansible.builtin.slurp:
        path: /etc/fstab
      register: slurp_fstab_after

    - name: Echo content of /etc/fstab (after)
      ansible.builtin.debug:
        msg: "{{ slurp_fstab_after.content | b64decode }}"

    - name: Get output of df command
      ansible.builtin.command: "df -h"
      changed_when: false
      register: check_df

    - name: Display output of df command
      ansible.builtin.debug:
        msg: "{{ check_df }}"
      when: check_df is succeeded

    - name: Get shared directories on /mnt
      ansible.builtin.command: "ls -l /mnt"
      changed_when: false
      register: shared_dir

    - name: Display shared directories on /mnt
      ansible.builtin.debug:
        msg: "{{ shared_dir }}"
      when: shared_dir is succeeded
  rescue:
    - name: Uninstall packages for nfs-utils
      ansible.builtin.dnf:
        name: "nfs-utils"
        state: absent
      become: true

    - name: Unmount NFS share directory
      ansible.posix.mount:
        path: /mnt
        state: unmounted
      become: true

    - name: Restore /etc/fstab
      ansible.builtin.copy:
        src: /etc/fstab_org
        dest: /etc/fstab
        owner: root
        group: root
        mode: "0644"
        remote_src: true
        force: true
      become: true
